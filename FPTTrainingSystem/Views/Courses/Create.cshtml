@model FPTTrainingSystem.Models.Course

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create","Courses")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        <p>Instructor: @ViewBag.instructor_name</p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Instructor", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.Editor("CourseInstructorId", new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.instructor_id }})
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseDate, "", new { @class = "text-danger" })
            </div>
        </div>

       
            @Html.ActionLink("Non-Ajax Request: Select Instructor for this course","SelectInstructor","ApplicationUsers")
            <br>
            @Ajax.ActionLink("Ajax Request: Get a List Of Instructor Here", "GetInstructors", "ApplicationUsers", 
                                new AjaxOptions { UpdateTargetId = "instructor_list_ajax" })
            <div class="col-md-10" id="instructor_list_ajax"> 
                <!--This is a place to display the return content after the ajax request/response-->           
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
